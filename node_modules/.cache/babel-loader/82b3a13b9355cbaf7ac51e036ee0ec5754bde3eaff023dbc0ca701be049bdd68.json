{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[username,setUsername]=useState('');const[password,setPassword]=useState('');const navigate=useNavigate();const handleSubmit=e=>{e.preventDefault();// Implement your login logic here\n// For example, you can validate the user and then redirect to the dashboard\nif(username==='admin'&&password==='password'){// Set user as authenticated (this could be setting a token or updating context/state)\nnavigate('/dashboard');}else{alert('Invalid credentials');}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Username\",value:username,onChange:e=>setUsername(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]});};export default Login;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Login","username","setUsername","password","setPassword","navigate","handleSubmit","e","preventDefault","alert","onSubmit","children","type","placeholder","value","onChange","target"],"sources":["/var/www/html/my-dashboard-app/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Implement your login logic here\n    // For example, you can validate the user and then redirect to the dashboard\n    if (username === 'admin' && password === 'password') {\n      // Set user as authenticated (this could be setting a token or updating context/state)\n      navigate('/dashboard');\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n};\n\nexport default Login;\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,KAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CAClB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACS,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAAAW,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAW,YAAY,CAAIC,CAAC,EAAK,CAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB;AACA;AACA,GAAIP,QAAQ,GAAK,OAAO,EAAIE,QAAQ,GAAK,UAAU,CAAE,CACnD;AACAE,QAAQ,CAAC,YAAY,CAAC,CACxB,CAAC,IAAM,CACLI,KAAK,CAAC,qBAAqB,CAAC,CAC9B,CACF,CAAC,CAED,mBACEV,KAAA,SAAMW,QAAQ,CAAEJ,YAAa,CAAAK,QAAA,eAC3Bd,IAAA,UACEe,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,UAAU,CACtBC,KAAK,CAAEb,QAAS,CAChBc,QAAQ,CAAGR,CAAC,EAAKL,WAAW,CAACK,CAAC,CAACS,MAAM,CAACF,KAAK,CAAE,CAC9C,CAAC,cACFjB,IAAA,UACEe,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,UAAU,CACtBC,KAAK,CAAEX,QAAS,CAChBY,QAAQ,CAAGR,CAAC,EAAKH,WAAW,CAACG,CAAC,CAACS,MAAM,CAACF,KAAK,CAAE,CAC9C,CAAC,cACFjB,IAAA,WAAQe,IAAI,CAAC,QAAQ,CAAAD,QAAA,CAAC,OAAK,CAAQ,CAAC,EAChC,CAAC,CAEX,CAAC,CAED,cAAe,CAAAX,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}